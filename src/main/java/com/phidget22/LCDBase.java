/* DO NOT EDIT THIS FILE - it is machine generated */

/*
 * This file is part of Phidget22.jar
 *
 * Copyright 2017 Phidgets Inc <patrick@phidgets.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, see
 * <http://www.gnu.org/licenses/>
 */

package com.phidget22;
import java.util.*;

public class LCDBase extends Phidget {

	LCDBase(long handle) {
		super(handle);
	}

	public LCDBase() throws PhidgetException {
		super(create());
	}

	private native static long create() throws PhidgetException;

	private final void setDeviceEvents(boolean enable) {
	}


	public native double getBacklight() throws PhidgetException;
	public native void setBacklight(double Backlight) throws PhidgetException;
	public native double getMinBacklight() throws PhidgetException;
	public native double getMaxBacklight() throws PhidgetException;
	public native void setCharacterBitmap(LCDFont font, java.lang.String character, byte[] bitmap) throws PhidgetException;
	public native void setCharacterBitmap(LCDFont font, java.lang.String character, byte[] bitmap, AsyncListener asyncHandler);
	public native int getMaxCharacters(LCDFont font) throws PhidgetException;
	public native void clear(AsyncListener asyncHandler);
	public native void clear() throws PhidgetException;
	public native double getContrast() throws PhidgetException;
	public native void setContrast(double Contrast) throws PhidgetException;
	public native double getMinContrast() throws PhidgetException;
	public native double getMaxContrast() throws PhidgetException;
	public native void copy(int sourceFramebuffer, int destFramebuffer, int sourceX1, int sourceY1, int sourceX2, int sourceY2, int destX, int destY, boolean inverted) throws PhidgetException;
	public native void copy(int sourceFramebuffer, int destFramebuffer, int sourceX1, int sourceY1, int sourceX2, int sourceY2, int destX, int destY, boolean inverted, AsyncListener asyncHandler);
	public native boolean getCursorBlink() throws PhidgetException;
	public native void setCursorBlink(boolean CursorBlink) throws PhidgetException;
	public native boolean getCursorOn() throws PhidgetException;
	public native void setCursorOn(boolean CursorOn) throws PhidgetException;
	public native void drawLine(int x1, int y1, int x2, int y2, AsyncListener asyncHandler);
	public native void drawLine(int x1, int y1, int x2, int y2) throws PhidgetException;
	public native void drawPixel(int x, int y, LCDPixelState pixelState) throws PhidgetException;
	public native void drawPixel(int x, int y, LCDPixelState pixelState, AsyncListener asyncHandler);
	public native void drawRect(int x1, int y1, int x2, int y2, boolean filled, boolean inverted, AsyncListener asyncHandler);
	public native void drawRect(int x1, int y1, int x2, int y2, boolean filled, boolean inverted) throws PhidgetException;
	public native void flush() throws PhidgetException;
	public native void flush(AsyncListener asyncHandler);
	public native void setFontSize(LCDFont font, int width, int height) throws PhidgetException;
	public native int getFrameBuffer() throws PhidgetException;
	public native void setFrameBuffer(int FrameBuffer) throws PhidgetException;
	public native void setFrameBuffer(int FrameBuffer, AsyncListener asyncHandler);
	public native int getHeight() throws PhidgetException;
	public native void initialize() throws PhidgetException;
	public native void saveFrameBuffer(int frameBuffer, AsyncListener asyncHandler);
	public native void saveFrameBuffer(int frameBuffer) throws PhidgetException;
	public native LCDScreenSize getScreenSize() throws PhidgetException;
	public native void setScreenSize(LCDScreenSize ScreenSize) throws PhidgetException;
	public native boolean getSleeping() throws PhidgetException;
	public native void setSleeping(boolean Sleeping) throws PhidgetException;
	public native int getWidth() throws PhidgetException;
	public native void writeBitmap(int xPosition, int yPosition, int xSize, int ySize, byte[] bitmap, AsyncListener asyncHandler);
	public native void writeBitmap(int xPosition, int yPosition, int xSize, int ySize, byte[] bitmap) throws PhidgetException;
	public native void writeText(LCDFont font, int xPosition, int yPosition, java.lang.String text) throws PhidgetException;
	public native void writeText(LCDFont font, int xPosition, int yPosition, java.lang.String text, AsyncListener asyncHandler);
}
